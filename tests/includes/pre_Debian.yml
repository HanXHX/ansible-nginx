---

- name: APT_REPOSITORY | Install backports
  apt_repository:
    repo: 'deb http://httpredir.debian.org/debian {{ ansible_distribution_release }}-backports main'
    state: present
  when: nginx_backports

- block:

  - name: APT | Install DotDeb key
    apt_key:
      url: 'http://www.dotdeb.org/dotdeb.gpg'
      state: present

  - name: APT_REPOSITORY | Install dotdeb (PHP 7)
    apt_repository:
      repo: 'deb http://packages.dotdeb.org {{ ansible_distribution_release }} all'
      state: present

  - name: LINEFILEFILE | Dotdeb priority (prevent install nginx from dotdeb)
    copy:
      content: "Package: *\nPin: release o=packages.dotdeb.org\nPin-Priority: 100"
      dest: /etc/apt/preferences

  when: ansible_distribution_release == 'jessie' and dotdeb | default(false)

- block:

  - name: APT | Install apt-transport-https
    apt:
      pkg: apt-transport-https
      update_cache: yes
      cache_valid_time: 3600

  - name: APT_KEY | Install GPG key
    apt_key:
      url: 'https://packages.sury.org/php/apt.gpg'

  - name: APT_REPOSITORY | Add APT repository
    apt_repository:
      repo: 'deb https://packages.sury.org/php {{ ansible_distribution_release }} main'

  when: sury | default(false)

- name: APT | Install needed packages
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
    state: present
  with_items:
    - curl
    - fcgiwrap
    - nghttp2
    - strace
    - vim

- name: APT | Install PHP
  apt:
    pkg: "{{ item.version | php_fpm_package }}"
    update_cache: yes
    cache_valid_time: 3600
    state: present
  with_items: "{{ nginx_php }}"

- name: SERVICE | Force start fcgiwrap
  service:
    name: "fcgiwrap"
    state: started

- name: SERVICE | Force start PHP
  service:
    name: "{{ item.version | php_fpm_service }}"
    state: started
  with_items: "{{ nginx_php }}"
