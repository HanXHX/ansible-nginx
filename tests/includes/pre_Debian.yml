---

- name: APT_REPOSITORY | Install backports
  apt_repository:
    repo: 'deb http://httpredir.debian.org/debian {{ ansible_distribution_release }}-backports main'
    state: present
  when: nginx_backports

- block:

  - name: APT | Install apt-transport-https
    apt:
      pkg: apt-transport-https
      update_cache: yes
      cache_valid_time: 3600

  - name: APT_KEY | Install GPG key
    apt_key:
      url: 'https://packages.sury.org/php/apt.gpg'

  - name: APT_REPOSITORY | Add APT repository
    apt_repository:
      repo: 'deb https://packages.sury.org/php {{ ansible_distribution_release }} main'

  when: sury | default(false)

- name: APT | Install needed packages
  apt:
    pkg: "{{ packages }}"
    update_cache: yes
    cache_valid_time: 3600
    state: present
  vars:
    packages:
      - cron
      - curl
      - fcgiwrap
      - jq
      - nghttp2
      - strace
      - vim
      - unzip

- name: APT | Install daemonize from Stretch
  apt:
    deb: http://ftp.us.debian.org/debian/pool/main/d/daemonize/daemonize_1.7.7-1+b1_amd64.deb

- name: APT | Install PHP
  apt:
    pkg: "{{ item.version | php_fpm_package }}"
    update_cache: yes
    cache_valid_time: 3600
    state: present
  loop: "{{ nginx_php }}"
  register: apt_php

- name: SERVICE | Force start fcgiwrap
  service:
    name: "fcgiwrap"
    state: started

# Bypasses Ansible+Docker issue. With service module... php is not really started!
- name: COMMAND | Force start PHP
  command: "service {{ item.version | php_fpm_service }} start"
  args:
    creates: "{{ item.version | php_default_upstream_socket }}"
    warn: false
  loop: "{{ nginx_php }}"

- name: GET_URL | Download ngrok
  get_url:
    url: "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip"
    dest: "/tmp/ngrok.zip"

- name: UNARCHIVE | Uncompress ngrok
  unarchive:
    src: "/tmp/ngrok.zip"
    dest: "/tmp"
    remote_src: yes

- name: SET_FACT | ngrok_path
  set_fact:
    ngrok_path: '/tmp/ngrok'
